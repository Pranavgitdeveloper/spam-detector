# spam-detector/
# ├── app.py              ✅ (This file)
# ├── model.pkl           ✅ (generated by training script)
# ├── vectorizer.pkl      ✅ (generated by training script)
# ├── templates/
# │   └── index.html      ✅ (your web page)
# ├── static/
# │   └── style.css       ✅ (your custom CSS)
# ├── train_and_save_model.py ✅ (your training script)
# ├── requirements.txt
# ├── Procfile (if deploying)
#(Flask backend)
from flask import Flask, render_template, request
import pickle

app = Flask(__name__)

# ✅ Load the saved model and vectorizer
model = pickle.load(open('model.pkl', 'rb'))
vectorizer = pickle.load(open('vectorizer.pkl', 'rb'))

# ✅ Home route → show form
@app.route('/')
def home():
    return render_template('index.html')

# ✅ Predict route → handles form submission
@app.route('/predict', methods=['POST'])
def predict():
    message = request.form['message']
    data = vectorizer.transform([message])
    prediction = model.predict(data)
    proba = model.predict_proba(data)[0][prediction[0]] * 100
    result = 'Spam' if prediction[0] == 1 else 'Not Spam'
    return render_template(
        'index.html',
        prediction=result,
        original=message,
        confidence=f"{proba:.2f}%"
    )

if __name__ == '__main__':
    app.run(debug=True)
